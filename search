#!/bin/bash
# Requirements: sed, curl
# Author: PietroVN

# Usage:
# search <MODE:>		<Title>
# search YOUTUBE:"hollow knight ost"

search_mode=$@

# Enviroment
invidious_instance="https://invidious.snopyta.org/"
youtube="https://youtube.com/"
max_videos=10

# Tmp vars
number=1
tmp_videos="${XDG_RUNTIME_DIR}/tmp-videos.txt"
tmp_video_titles="${XDG_RUNTIME_DIR}/tmp-video-titles.txt"

# Youtube/Invidious specific code
youtube() {
	# Search
	search=$(sed 's/YOUTUBE://g' <<< ${search_mode})
	fixed_search=$(sed 's/ /+/g' <<< ${search})

	# Url
	url="${invidious_instance}search?q=${fixed_search}"
	video_url=$(curl -s ${url} | grep -Eo "watch\?v=.{11}")
	video_title=$(curl -s ${url} | grep -i '<p dir="auto">')

	# Fix video title
	fixed_video_title=$(sed 's/ /_/g' <<< ${video_title})
	fixed_video_title=$(sed 's/+//g' <<< ${fixed_video_title})
	fixed_video_title=$(sed 's/-//g' <<< ${fixed_video_title})
	fixed_video_title=$(sed 's/<p_dir="auto">//g' <<< ${fixed_video_title})

	# Fix special characters on video title
	fixed_video_title=$(sed 's/amp;//g' <<< ${fixed_video_tile}) # Fix &
	fixed_video_title=$(sed 's/________________//g' <<< ${fixed_video_title}) # Fix multiple underline
	fixed_video_title=$(sed 's/__/_/g' <<< ${fixed_video_title}) # Fix double underline
	fixed_video_title=$(sed 's/<\/p>//g' <<< ${fixed_video_title})
	fixed_video_title=$(sed 's/<\/b>//g' <<< ${fixed_video_title})
	fixed_video_title=$(sed 's/【//g' <<< ${fixed_video_title})
	fixed_video_title=$(sed 's/&quot;//g' <<< ${fixed_video_title} <<< ${fixed_video_title})

	# Remove channels
	fixed_video_title=$(sed 's/<b>.*//g' <<< ${fixed_video_title})

	# Delete previous video list
	[[ -f "${tmp_videos}" ]] && rm "${tmp_videos}"
	[[ -f "${tmp_video_titles}" ]] && rm "${tmp_video_titles}"

	# Store urls
	for f in ${video_url}; do
		# Store videos
		[[ ${f} != ${prev} ]] && echo "${f}" >> ${tmp_videos}

		# Increase number
		[[ ${f} != ${prev} ]] && number=$((number+1))

		# Set current link as previous
		prev=${f}

		# Break
		[[ ${number} -gt "${max_videos}" ]] && break
	done

	# Reset number
	number=1

	# Store titles
	for f in ${fixed_video_title}; do
		# Store video titles
		[[ ${f} != ${prev} ]]  && echo "${f}" >> ${tmp_video_titles}

		# Increase number
		[[ ${f} != ${prev} ]] && number=$((number+1))

		# Set previous
		prev=${f}

		# Break
		[[ ${number} -gt "${max_videos}" ]] && break
	done

	# Reset number
	number=1

	# List videos
	for f in $(cat ${tmp_video_titles}); do
		# Show videos title
		echo "${number} - ${f}"

		# Increase number
		NUMBER=$((${number}+1))
	done
}

# Search modes
[[ ${search_mode} == *"youtube:"* ]] && youtube
